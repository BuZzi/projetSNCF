{% extends '::base.html.twig' %}

{% block head %}
    {{ parent() }}
    <style type="text/css">
        html { height: 100% }
        body { height: 100%; margin: 0; padding: 0 }
        #map-canvas { height: 100% }
    </style>
    <script type="text/javascript"
            src="https://maps.googleapis.com/maps/api/js?sensor=false">
    </script>
{% endblock %}

 {% block body %}
     body
     {% block map %}
         <div id="map-canvas"></div>
     {% endblock %}
 {% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript">
        var locations = [
            ['Bondi Beach', -33.890542, 151.274856, 4],
            ['Coogee Beach', -33.923036, 151.259052, 5],
            ['Cronulla Beach', -34.028249, 151.157507, 3],
            ['Manly Beach', -33.80010128657071, 151.28747820854187, 2],
            ['Saint Denis Beach', 48.93547, 2.34544, 1]
        ];

        var map = new google.maps.Map(document.getElementById('map-canvas'), {
            zoom: 10,
            center: new google.maps.LatLng(-33.92, 151.25),
            mapTypeId: google.maps.MapTypeId.ROADMAP
        });

        var infowindow = new google.maps.InfoWindow();

        var marker, i;

        for (i = 0; i < locations.length; i++) {
            marker = new google.maps.Marker({
                position: new google.maps.LatLng(locations[i][1], locations[i][2]),
                map: map
            });

            google.maps.event.addListener(marker, 'click', (function(marker, i) {
                return function() {
                    infowindow.setContent(locations[i][0]);
                    infowindow.open(map, marker);
                }
            })(marker, i));
        }
    </script>
{% endblock %}
<script type="text/javascript">

    var $_iViewportHeight = document.documentElement.clientHeight - 60;
    var $_iViewportWidth = document.documentElement.clientWidth;

    var mapcontainer = document.getElementById('map-canvas');
    mapcontainer.style.height = $_iViewportHeight + 'px';
    mapcontainer.style.width = $_iViewportWidth + 'px';

    var map = new google.maps.Map(document.getElementById('map-canvas'), {
        zoom: 14, // set default zoom level
        // set center point (station point)
        center: new google.maps.LatLng( {{ stationVenue.latitude }}, {{ stationVenue.longitude }} ),
        disableDefaultUI: true, // disabled default UI
        mapTypeId: google.maps.MapTypeId.ROADMAP
    });

    // MARKER STATION
    var $_oMarkerStation; // define marker variable for station
    $_oMarkerStation = new google.maps.Marker({
        position: new google.maps.LatLng( {{ stationVenue.latitude }}, {{ stationVenue.longitude }} ),
        animation: google.maps.Animation.DROP,
        map: map,
        icon : 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png', // Icone spécifique du marker
        title : "{{ stationVenue.name }}"
    });


    // MARKER VENUES
    var $_oMarker; // define marker variable
    var $_oInfoWindow = new google.maps.InfoWindow(); // define infowindow popup

    //INFOW WINDOW STATION
    google.maps.event.addListener($_oMarkerStation, 'click', function() {
        $_oInfoWindow.setContent("Gare : <b>{{ stationVenue.name }}</b>");
        $_oInfoWindow.open(map, $_oMarker);
    });

    {% for Venue in listVenues %}
    $_oMarker = new google.maps.Marker({
        position: new google.maps.LatLng( {{ Venue.latitude }}, {{ Venue.longitude }} ),
        animation: google.maps.Animation.DROP,
        map: map,
        title : "{{ Venue.name }}"
    });

    var $_sContent = "<div class='infowindow'>"+
            "<h4>{{ Venue.name }}</h4>"+
            "{% if Venue.address is defined %}<span>{{ Venue.address }}</span><br>{% endif %}"+
            "{% if Venue.postalCode is defined %}<span>{{ Venue.postalCode }}</span><br>{% endif %}"+
            "{% if Venue.city is defined %}<span>{{ Venue.city }}</span><br>{% endif %}"+
            "{% if Venue.state is defined %}<span>{{ Venue.state }}, {{ Venue.country }}</span><br>{% endif %}"+
            "{% if Venue.distance is defined %}<span>Distance : {{ Venue.distance }} mètres</span>{% endif %}"+
            "</div>";
    // appelle la fonction de bind (association marker - content - infowindow)
    bindInfoW($_oMarker, $_sContent, $_oInfoWindow);

    {% endfor %}

    // fonction pour bind le bousin
    function bindInfoW($_oMarker, $_sContent, $_oInfoWindow)
    {
        google.maps.event.addListener($_oMarker, 'click', function() {
            $_oInfoWindow.setContent($_sContent);
            $_oInfoWindow.open(map, $_oMarker);
        });
    }

</script>